{"version":3,"sources":["molecules/chart.module.css","molecules/Form.js","molecules/Chart.js","pages/App.js","index.js","pages/App.module.css"],"names":["module","exports","today","Date","setDate","getDate","date","toISOString","substr","Form","setFetchData","dateRef","useRef","countryRef","onSubmit","e","preventDefault","current","value","country","ref","type","defaultValue","list","Chart","results","console","log","correctData","Object","entries","key","chartObject","day","push","BarChart","className","classes","chartWrapper","width","height","data","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","fetchDataReducer","state","action","formatDate","d","month","getMonth","year","getFullYear","length","join","App","useReducer","fetchData","fetchDataDispatch","useState","setResults","error","setError","useEffect","inputData","setMonth","startingDate","endingDate","fetch","endpoint","then","response","json","catch","mainHeader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.426396c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartWrapper\":\"chart_chartWrapper__1Oh77\"};","import React, { useRef } from \"react\";\r\nimport classes from \"./form.module.css\";\r\n\r\nconst today = new Date();\r\ntoday.setDate(today.getDate());\r\nconst date = today.toISOString().substr(0, 10);\r\n\r\nconst initCountry = \"DEU\";\r\n\r\nfunction Form({ setFetchData }) {\r\n  const dateRef = useRef();\r\n  const countryRef = useRef();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setFetchData({\r\n      date: dateRef.current.value,\r\n      country: countryRef.current.value,\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <fieldset>\r\n        <label>\r\n          date\r\n          <input ref={dateRef} type=\"date\" defaultValue={date} />\r\n        </label>\r\n        <label>\r\n          country\r\n          <select ref={countryRef} defaultValue={initCountry} list=\"country\">\r\n            <option value=\"POL\">Poland</option>\r\n            <option value=\"DEU\">Germany</option>\r\n          </select>\r\n        </label>\r\n      </fieldset>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { BarChart, Legend, Bar, XAxis, YAxis, Tooltip } from \"recharts\";\r\n\r\nimport classes from \"./chart.module.css\";\r\n\r\nfunction Chart({ results }) {\r\n  console.log(results);\r\n  let correctData = [];\r\n  for (const [key, value] of Object.entries(results)) {\r\n    const chartObject = { day: key, ...value };\r\n    correctData.push(chartObject);\r\n  }\r\n  return (\r\n    <BarChart\r\n      className={classes.chartWrapper}\r\n      width={600}\r\n      height={300}\r\n      data={correctData}\r\n    >\r\n      <XAxis dataKey=\"day\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey=\"deaths\" fill=\"#8884d8\" />\r\n      <Bar dataKey=\"confirmed\" fill=\"#82ca9d\" />\r\n    </BarChart>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\n\nimport classes from \"./App.module.css\";\nimport Form from \"../molecules/Form\";\nimport Chart from \"../molecules/Chart\";\n\nconst endpoint = (country, startingDate, endingDate) => {\n  return `https://covidapi.info/api/v1/country/${country}/timeseries/${startingDate}/${endingDate}`;\n};\n\nconst fetchDataReducer = (state, action) => {\n  return {\n    date: action.date,\n    country: action.country,\n  };\n};\nconst formatDate = (date) => {\n  var d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n};\n\nfunction App() {\n  const [fetchData, fetchDataDispatch] = useReducer(fetchDataReducer, {\n    date: \"\",\n    country: \"\",\n  });\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const inputData = new Date(fetchData.date);\n    inputData.setMonth(inputData.getMonth() + 1); //month later\n    const startingDate = formatDate(fetchData.date);\n    const endingDate = formatDate(inputData);\n    fetch(endpoint(fetchData.country, startingDate, endingDate))\n      .then((response) => response.json())\n      .then((data) => setResults(data[\"result\"]), setError(\"\"))\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        setError(`${error}`);\n      });\n  }, [fetchData]);\n  return (\n    <>\n      <h1 className={classes.mainHeader}>Covid chart</h1>\n      <Form setFetchData={fetchDataDispatch} />\n      {error && (\n        <p className={classes.error}>\n          {error}\n          <br />\n          Make sure your <i>date</i> it's month ago from today.\n        </p>\n      )}\n      {results && <Chart results={results} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"App_mainHeader__1s5y8\",\"error\":\"App_error__Jtyit\"};"],"sourceRoot":""}